# -*- mode: ruby -*-
# vi: set ft=ruby :

################################################################
# Infrastructure Configuration
################################################################
# OS which will be installed on VMs (all available images on https://app.vagrantup.com/boxes/search)
IMAGE_NAME = "centos/7"

# On every machine there will be added user with sudo privileges with this name
ADMIN_USERNAME = "admin"

# Password for the user above
ADMIN_PASSWORD = "12345"

# Description of the cluster.
# Each element here is a single virtual machine.
# Each VM is a pair of hostname and set of features:
# - IP address
# - number of CPUs
# - Memory (in MB) 
CLUSTER = {
    "node-master" => {
        :ip => "192.168.33.101",
        :cpus => 2,
        :mem => 4096
    },
    "node-slave" => {
        :ip => "192.168.33.102",
        :cpus => 2,
        :mem => 4096
    }
}
################################################################

VAGRANTFILE_API_VERSION = "2"
host_to_ip_list = []
host_list = []
CLUSTER.each_pair { |hostname, info| host_to_ip_list.push("#{hostname}=#{info[:ip]}") }
CLUSTER.each_key { |hostname| host_list.push(hostname) }

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = IMAGE_NAME
  config.vm.box_check_update = true
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
  end

  CLUSTER.each_with_index do |(hostname, info), i|
    config.vm.define hostname do |node|
      node.vm.hostname = hostname
      node.vm.network :private_network, ip: info[:ip]
      node.vm.provider "virtualbox" do |vb|
        vb.name = hostname
        vb.cpus = info[:cpus]
        vb.memory = info[:mem]
        vb.customize ["modifyvm", :id, "--groups", "/Demo Cluster"]
      end
      node.vm.provision "shell" do |s|
        s.path = "scripts/set_up_hosts_file.sh"
        s.args = host_to_ip_list
      end
      node.vm.provision "shell" do |s|
        s.path = "scripts/set_up_admin_user.sh"
        s.args = [ADMIN_USERNAME, ADMIN_PASSWORD]
      end
      node.vm.provision "shell", path: "scripts/set_up_ssh.sh"
      node.trigger.after :up do |trigger|
        if i == CLUSTER.length - 1
          trigger.ruby do
            init_cluster(host_list)
          end
        end
      end
    end
  end
end

def init_cluster(host_list)
  require 'rubygems'
  require 'net/ssh'
  CLUSTER.each do |hostname, info|
    begin
      Net::SSH.start(info[:ip], ADMIN_USERNAME, :password => ADMIN_PASSWORD) do |ssh|
        host_list.each do |host|
          puts host
          puts ssh.exec!("ssh-keyscan -H #{host} >> ~/.ssh/known_hosts")
        end
        host_list.each do |host|
          puts host
          puts ssh.exec!("sshpass -p '#{ADMIN_PASSWORD}' ssh-copy-id '#{ADMIN_USERNAME}@#{host}'")
        end
      end
      puts "SSH keys have been installed on all machines"
    rescue
      puts "Error during provisioning #{hostname}: #{$!}"
    end
  end
end
